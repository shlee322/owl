/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace mailClient.api
{

  [Serializable]
  public partial class mailSet : TBase
  {
    private string _senderAddress;
    private long _whenToSend;
    private string _mailContent;
    private byte[] _addressBook;
    private bool _creatAddress;

    public string SenderAddress
    {
      get
      {
        return _senderAddress;
      }
      set
      {
        __isset.senderAddress = true;
        this._senderAddress = value;
      }
    }

    public long WhenToSend
    {
      get
      {
        return _whenToSend;
      }
      set
      {
        __isset.whenToSend = true;
        this._whenToSend = value;
      }
    }

    public string MailContent
    {
      get
      {
        return _mailContent;
      }
      set
      {
        __isset.mailContent = true;
        this._mailContent = value;
      }
    }

    public byte[] AddressBook
    {
      get
      {
        return _addressBook;
      }
      set
      {
        __isset.addressBook = true;
        this._addressBook = value;
      }
    }

    public bool CreatAddress
    {
      get
      {
        return _creatAddress;
      }
      set
      {
        __isset.creatAddress = true;
        this._creatAddress = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool senderAddress;
      public bool whenToSend;
      public bool mailContent;
      public bool addressBook;
      public bool creatAddress;
    }

    public mailSet() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              SenderAddress = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I64) {
              WhenToSend = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              MailContent = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              AddressBook = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Bool) {
              CreatAddress = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("mailSet");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (SenderAddress != null && __isset.senderAddress) {
        field.Name = "senderAddress";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SenderAddress);
        oprot.WriteFieldEnd();
      }
      if (__isset.whenToSend) {
        field.Name = "whenToSend";
        field.Type = TType.I64;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(WhenToSend);
        oprot.WriteFieldEnd();
      }
      if (MailContent != null && __isset.mailContent) {
        field.Name = "mailContent";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MailContent);
        oprot.WriteFieldEnd();
      }
      if (AddressBook != null && __isset.addressBook) {
        field.Name = "addressBook";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(AddressBook);
        oprot.WriteFieldEnd();
      }
      if (__isset.creatAddress) {
        field.Name = "creatAddress";
        field.Type = TType.Bool;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(CreatAddress);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("mailSet(");
      sb.Append("SenderAddress: ");
      sb.Append(SenderAddress);
      sb.Append(",WhenToSend: ");
      sb.Append(WhenToSend);
      sb.Append(",MailContent: ");
      sb.Append(MailContent);
      sb.Append(",AddressBook: ");
      sb.Append(AddressBook);
      sb.Append(",CreatAddress: ");
      sb.Append(CreatAddress);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
