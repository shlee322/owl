option java_package = "Protocol";
option java_outer_classname = "SenderController";

message CertifyRequest {
    required string key1 = 1;
    required string key2 = 2;
}

message CertifyResponse {
    required bool result = 1;
}

message NewTaskRequest {
    required int64 Time = 1;
}

message NewTaskResponse {
    required string Time = 1;
    required string From = 2;
    required string Subject = 3;
    required string Message = 4;
}

message GetMailListRequest {
    required int64 Time = 1;
}

message GetMailListResponse {
    required string ObjectId = 2;
    required string Key = 3;
    required string Address = 4;
}

message MailStatusRequest {
    required int64 Time = 1;
    required string ObjectId = 2;
    required string code = 3;
}

message MailStatusResponse {
}

message MonitoringRequest {
    required double CPU = 1;
    required int64 Memory = 2;
    required int64 NetworkIn_Byte = 3;
    required int64 NetworkIn_Pakcet = 4;
    required int64 NetworkOut_Byte = 5;
    required int64 NetworkOut_Pakcet = 6;
    required int64 Thread = 7;
    required int64 SendCount = 8;
}

message MonitoringResponse {
}

service SenderHandler {
    rpc Certify(CertifyRequest) returns (CertifyResponse);
    rpc NewTask(NewTaskRequest) returns (NewTaskResponse);
    rpc GetMailList(GetMailListRequest) returns (GetMailListResponse);
    rpc MailStatus(MailStatusRequest) returns (MailStatusResponse);
    rpc Monitoring(MonitoringRequest) returns (MonitoringResponse);
}